<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

       <!-- 引入属性文件 -->
       <context:property-placeholder location="classpath:config.properties" />

       <!-- 自动扫描(自动注入) -->
       <context:component-scan base-package="sims.controller" />
       <context:component-scan base-package="sims.service" />

        <!--Setup a handler for servering static content -->
        <!-- DEMO <mvc:resources mapping="/resources/**" location="/resources/"/>-->
        <mvc:resources mapping="/css/**"          location="/WEB-INF/css/"/>
        <mvc:resources mapping="/js/**"           location="/WEB-INF/js/"/>
        <mvc:resources mapping="/images/**"       location="/WEB-INF/images/"/>
        <mvc:resources mapping="/fonts/**"        location="/WEB-INF/fonts/"/>

        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name="prefix" value="/WEB-INF/views/jsp/"></property>
            <property name="suffix" value=".jsp"></property>
            <!--
                Bydefaul the View object that InternalResourceViewResolver create is an
                instance of InternalResourceView, which simply dispatches the request to
                the JSP for rendering. But since demo.jsp use some JSTL tags, we may choose
                to replace InternalResourceView with JstlView by setting the viewClass
                property as follows
             -->
            <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        </bean>
</beans>